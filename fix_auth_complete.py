"""
–ü–æ–ª–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ app/auth.py
–ó–∞–ø—É—Å–∫: python fix_auth_complete.py
"""


def fix_auth_file():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å–µ –∏–∑–≤–µ—Å—Ç–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –≤ auth.py"""

    file_path = "app/auth.py"

    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ app/auth.py...\n")

    with open(file_path, 'r', encoding='utf-8') as f:
        content = f.read()

    fixed = False

    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç—ã
    if 'from sqlalchemy import select' not in content:
        print("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–º–ø–æ—Ä—Ç select")
        # –ù–∞—Ö–æ–¥–∏–º —Å—Ç—Ä–æ–∫—É —Å AsyncSession –∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ –Ω–µ–µ
        lines = content.split('\n')
        for i, line in enumerate(lines):
            if 'from sqlalchemy.ext.asyncio import AsyncSession' in line:
                lines.insert(i + 1, 'from sqlalchemy import select, and_, or_')
                content = '\n'.join(lines)
                fixed = True
                print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç select")
                break
    else:
        print("‚úÖ –ò–º–ø–æ—Ä—Ç select –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç")

    # 2. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º RateLimiter
    old_rate_limiter = 'client_id = request.client.host'
    new_rate_limiter = 'client_id = request.client.host if request.client else "unknown"'

    if old_rate_limiter in content and new_rate_limiter not in content:
        print("‚ùå RateLimiter –Ω–µ–±–µ–∑–æ–ø–∞—Å–µ–Ω")
        content = content.replace(old_rate_limiter, new_rate_limiter)
        fixed = True
        print("‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω RateLimiter")
    else:
        print("‚úÖ RateLimiter –±–µ–∑–æ–ø–∞—Å–µ–Ω")

    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç–æ–¥ authenticate_user
    if 'async def authenticate_user(' in content:
        # –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è select –ø—Ä–∞–≤–∏–ª—å–Ω–æ
        if 'result = await db.execute(' not in content:
            print("‚ö†Ô∏è  –í–æ–∑–º–æ–∂–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞ –≤ authenticate_user")
    else:
        print("‚úÖ authenticate_user –≤—ã–≥–ª—è–¥–∏—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –µ—Å–ª–∏ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    if fixed:
        with open(file_path, 'w', encoding='utf-8') as f:
            f.write(content)
        print("\n‚úÖ –§–∞–π–ª –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!")
    else:
        print("\n‚úÖ –§–∞–π–ª —É–∂–µ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω!")

    print("\nüîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: python -m uvicorn app.main:app --reload")


if __name__ == "__main__":
    fix_auth_file()