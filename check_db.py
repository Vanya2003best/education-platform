"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
–ó–∞–ø—É—Å–∫: python check_db.py
"""
from app.database import SessionLocal, sync_engine
from app.models import User, Task, ShopItem
from app.auth import AuthService
from sqlalchemy import inspect


def check_database():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""

    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Education Platform\n")
    print("=" * 60)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    try:
        connection = sync_engine.connect()
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: OK")
        connection.close()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü
    try:
        inspector = inspect(sync_engine)
        tables = inspector.get_table_names()
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ç–∞–±–ª–∏—Ü: {len(tables)}")
        print(f"   –¢–∞–±–ª–∏—Ü—ã: {', '.join(tables[:5])}...")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∞–±–ª–∏—Ü: {e}")
        return

    print("\n" + "=" * 60)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    db = SessionLocal()

    try:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
        users = db.query(User).all()
        print(f"\nüë• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò ({len(users)} —à—Ç.):")
        if users:
            for user in users:
                print(f"   ‚Ä¢ {user.username:<15} | {user.email:<25} | –†–æ–ª—å: {user.role.value}")
        else:
            print("   ‚ö†Ô∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python reset_db.py")

        # –ó–∞–¥–∞–Ω–∏—è
        tasks = db.query(Task).all()
        print(f"\nüìù –ó–ê–î–ê–ù–ò–Ø ({len(tasks)} —à—Ç.):")
        if tasks:
            for task in tasks[:3]:
                print(f"   ‚Ä¢ {task.title[:50]:<50} | {task.subject}")
            if len(tasks) > 3:
                print(f"   ... –∏ –µ—â–µ {len(tasks) - 3} –∑–∞–¥–∞–Ω–∏–π")
        else:
            print("   ‚ö†Ô∏è  –ó–∞–¥–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")

        # –¢–æ–≤–∞—Ä—ã
        items = db.query(ShopItem).all()
        print(f"\nüõçÔ∏è  –¢–û–í–ê–†–´ –í –ú–ê–ì–ê–ó–ò–ù–ï ({len(items)} —à—Ç.):")
        if items:
            for item in items[:3]:
                print(f"   ‚Ä¢ {item.name:<30} | {item.price_coins} –º–æ–Ω–µ—Ç")
            if len(items) > 3:
                print(f"   ... –∏ –µ—â–µ {len(items) - 3} —Ç–æ–≤–∞—Ä–æ–≤")
        else:
            print("   ‚ö†Ô∏è  –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ö–µ—à–µ–π –ø–∞—Ä–æ–ª–µ–π
        print(f"\nüîê –ü–†–û–í–ï–†–ö–ê –ü–ê–†–û–õ–ï–ô:")
        if users:
            test_user = users[0]
            print(f"   –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {test_user.username}")
            print(f"   –•–µ—à –ø–∞—Ä–æ–ª—è: {test_user.password_hash[:50]}...")

            # –ü—Ä–æ–±—É–µ–º –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –ø–∞—Ä–æ–ª—å
            if test_user.username == "student1":
                is_valid = AuthService.verify_password("student123", test_user.password_hash)
                if is_valid:
                    print("   ‚úÖ –ü–∞—Ä–æ–ª—å 'student123' –≤–∞–ª–∏–¥–µ–Ω!")
                else:
                    print("   ‚ùå –ü–∞—Ä–æ–ª—å 'student123' –ù–ï –≤–∞–ª–∏–¥–µ–Ω! –û–®–ò–ë–ö–ê!")
            elif test_user.username == "admin":
                is_valid = AuthService.verify_password("admin123", test_user.password_hash)
                if is_valid:
                    print("   ‚úÖ –ü–∞—Ä–æ–ª—å 'admin123' –≤–∞–ª–∏–¥–µ–Ω!")
                else:
                    print("   ‚ùå –ü–∞—Ä–æ–ª—å 'admin123' –ù–ï –≤–∞–ª–∏–¥–µ–Ω! –û–®–ò–ë–ö–ê!")

        print("\n" + "=" * 60)
        print("\n‚úÖ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê\n")

        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        if not users or len(users) == 0:
            print("‚ö†Ô∏è  –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø: –ó–∞–ø—É—Å—Ç–∏—Ç–µ python reset_db.py –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö\n")
        else:
            print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤—ã–≥–ª—è–¥–∏—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ!\n")
            print("üìã –¢–µ—Å—Ç–æ–≤—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:")
            if any(u.username == "admin" for u in users):
                print("   ‚Ä¢ admin / admin123")
            if any(u.username == "teacher" for u in users):
                print("   ‚Ä¢ teacher / teacher123")
            if any(u.username == "student1" for u in users):
                print("   ‚Ä¢ student1 / student123")
            print()

    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        import traceback
        traceback.print_exc()

    finally:
        db.close()


if __name__ == "__main__":
    check_database()