"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
–ó–∞–ø—É—Å–∫: python test_users.py
"""
from app.database import SessionLocal
from app.models import User
from app.auth import AuthService

db = SessionLocal()

try:
    users = db.query(User).all()

    print("=" * 60)
    print(f"üë• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò –í –ë–ê–ó–ï –î–ê–ù–ù–´–•: {len(users)}")
    print("=" * 60)

    if not users:
        print("\n‚ùå –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò –ù–ï –ù–ê–ô–î–ï–ù–´!")
        print("\nüí° –†–µ—à–µ–Ω–∏–µ:")
        print("   python quick_fix.py")
        print("   –∏–ª–∏")
        print("   python minimal_setup.py")
    else:
        for user in users:
            print(f"\nüìã –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.username}")
            print(f"   Email: {user.email}")
            print(f"   –†–æ–ª—å: {user.role.value}")
            print(f"   –ê–∫—Ç–∏–≤–µ–Ω: {user.is_active}")
            print(f"   –•–µ—à –ø–∞—Ä–æ–ª—è: {user.password_hash[:30]}...")

            # –ü—Ä–æ–±—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø–∞—Ä–æ–ª–∏
            test_passwords = {
                "admin": "admin123",
                "teacher": "teacher123",
                "student1": "student123",
                "student2": "student123",
                "ivan": "ivan123"
            }

            if user.username in test_passwords:
                password = test_passwords[user.username]
                try:
                    is_valid = AuthService.verify_password(password, user.password_hash)
                    if is_valid:
                        print(f"   ‚úÖ –ü–∞—Ä–æ–ª—å '{password}' - –†–ê–ë–û–¢–ê–ï–¢!")
                    else:
                        print(f"   ‚ùå –ü–∞—Ä–æ–ª—å '{password}' - –ù–ï –†–ê–ë–û–¢–ê–ï–¢!")
                        print(f"   üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python quick_fix.py")
                except Exception as e:
                    print(f"   ‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞—Ä–æ–ª—è: {e}")

    print("\n" + "=" * 60)

except Exception as e:
    print(f"‚ùå –û–®–ò–ë–ö–ê: {e}")
    import traceback

    traceback.print_exc()

finally:
    db.close()