"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
–ó–∞–ø—É—Å–∫: python seed.py
"""
from app.database import SessionLocal, sync_engine
from app.models import Base, User, Task, ShopItem, UserRole
from app.auth import AuthService
import json


def create_sample_data():
    """–°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ"""

    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
    Base.metadata.create_all(bind=sync_engine)

    db = SessionLocal()

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –¥–∞–Ω–Ω—ã–µ
        if db.query(User).first():
            print("‚ö†Ô∏è  –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º...")
            return

        print("üì¶ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ...")

        # ===== –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò =====
        print("üë• –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")

        users = [
            User(
                username="teacher",
                email="teacher@example.com",
                password_hash=AuthService.get_password_hash("teacher123"),  # ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û
                full_name="–£—á–∏—Ç–µ–ª—å –ò–≤–∞–Ω–æ–≤",
                role=UserRole.TEACHER,
                coins=1000,
                level=10,
                experience=10000,
                is_active=True,
                is_verified=True
            ),
            User(
                username="student1",
                email="student1@example.com",
                password_hash=AuthService.get_password_hash("student123"),  # ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û
                full_name="–ü–µ—Ç—Ä–æ–≤ –ü–µ—Ç—Ä",
                role=UserRole.STUDENT,
                coins=250,
                level=3,
                experience=700,
                tasks_completed=15,
                average_score=78.5,
                is_active=True,
                is_verified=True
            ),
            User(
                username="student2",
                email="student2@example.com",
                password_hash=AuthService.get_password_hash("student123"),  # ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û
                full_name="–°–∏–¥–æ—Ä–æ–≤–∞ –ú–∞—Ä–∏—è",
                role=UserRole.STUDENT,
                coins=180,
                level=2,
                experience=350,
                tasks_completed=8,
                average_score=85.0,
                is_active=True,
                is_verified=True
            )
        ]

        for user in users:
            db.add(user)

        db.commit()
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")

        # ===== –ó–ê–î–ê–ù–ò–Ø =====
        print("üìù –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞–Ω–∏—è...")

        tasks = [
            Task(
                title="–†–µ—à–∏—Ç—å –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ",
                description="–†–µ—à–∏—Ç–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ: x¬≤ - 5x + 6 = 0\n\n–ü–æ–∫–∞–∂–∏—Ç–µ –ø–æ–ª–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ —Å –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ–º.",
                task_type="math",
                subject="–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
                difficulty=2,
                reward_coins=20,
                reward_exp=100,
                checking_criteria={"keywords": ["x1", "x2", "–¥–∏—Å–∫—Ä–∏–º–∏–Ω–∞–Ω—Ç", "–∫–æ—Ä–Ω–∏"], "min_length": 50},
                example_solution="D = b¬≤ - 4ac = 25 - 24 = 1\nx1 = (5+1)/2 = 3\nx2 = (5-1)/2 = 2",
                created_by=1
            ),
            Task(
                title="–ó–∞–¥–∞—á–∞ –Ω–∞ –¥–≤–∏–∂–µ–Ω–∏–µ",
                description="–î–≤–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥–∏—Å—Ç–∞ –≤—ã–µ—Ö–∞–ª–∏ –Ω–∞–≤—Å—Ç—Ä–µ—á—É –¥—Ä—É–≥ –¥—Ä—É–≥—É –∏–∑ –≥–æ—Ä–æ–¥–æ–≤, —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –∫–æ—Ç–æ—Ä—ã–º–∏ 60 –∫–º. –°–∫–æ—Ä–æ—Å—Ç—å –ø–µ—Ä–≤–æ–≥–æ 12 –∫–º/—á, –≤—Ç–æ—Ä–æ–≥–æ 18 –∫–º/—á. –ß–µ—Ä–µ–∑ —Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –æ–Ω–∏ –≤—Å—Ç—Ä–µ—Ç—è—Ç—Å—è?",
                task_type="math",
                subject="–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
                difficulty=3,
                reward_coins=30,
                reward_exp=150,
                checking_criteria={"keywords": ["—Å–∫–æ—Ä–æ—Å—Ç—å", "–≤—Ä–µ–º—è", "—Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ", "–≤—Å—Ç—Ä–µ—á–∞"], "min_length": 80},
                created_by=1
            ),
            Task(
                title="–°–æ—á–∏–Ω–µ–Ω–∏–µ: –ú–æ—è –ª—é–±–∏–º–∞—è –∫–Ω–∏–≥–∞",
                description="–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ—á–∏–Ω–µ–Ω–∏–µ –æ –≤–∞—à–µ–π –ª—é–±–∏–º–æ–π –∫–Ω–∏–≥–µ. –û–±—ä–µ–º: –Ω–µ –º–µ–Ω–µ–µ 150 —Å–ª–æ–≤.\n\n–£–∫–∞–∂–∏—Ç–µ:\n- –ù–∞–∑–≤–∞–Ω–∏–µ –∏ –∞–≤—Ç–æ—Ä–∞\n- –ö—Ä–∞—Ç–∫–∏–π —Å—é–∂–µ—Ç\n- –ß—Ç–æ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å\n- –ß–µ–º—É –Ω–∞—É—á–∏–ª–∞ –∫–Ω–∏–≥–∞",
                task_type="essay",
                subject="–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞",
                difficulty=2,
                reward_coins=25,
                reward_exp=120,
                checking_criteria={"keywords": ["–∫–Ω–∏–≥–∞", "–∞–≤—Ç–æ—Ä", "–≥–µ—Ä–æ–π", "—Å—é–∂–µ—Ç"], "min_length": 150},
                created_by=1
            ),
            Task(
                title="–ó–∞–∫–æ–Ω –û–º–∞",
                description="–†–µ—à–∏—Ç–µ –∑–∞–¥–∞—á—É:\n\n–ù–∞–ø—Ä—è–∂–µ–Ω–∏–µ –≤ —Ü–µ–ø–∏ 12 –í, —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ 4 –û–º. –ù–∞–π–¥–∏—Ç–µ —Å–∏–ª—É —Ç–æ–∫–∞.\n\n–ü–æ–∫–∞–∂–∏—Ç–µ —Ñ–æ—Ä–º—É–ª—É –∏ —Ä–∞—Å—á–µ—Ç—ã.",
                task_type="physics",
                subject="–§–∏–∑–∏–∫–∞",
                difficulty=2,
                reward_coins=20,
                reward_exp=100,
                checking_criteria={"keywords": ["–û–º", "—Ç–æ–∫", "–Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ", "—Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ", "I=U/R"], "min_length": 40},
                example_solution="I = U/R = 12/4 = 3 –ê",
                created_by=1
            ),
            Task(
                title="–¢–∞–±–ª–∏—Ü–∞ —É–º–Ω–æ–∂–µ–Ω–∏—è –Ω–∞ 7",
                description="–ù–∞–ø–∏—à–∏—Ç–µ —Ç–∞–±–ª–∏—Ü—É —É–º–Ω–æ–∂–µ–Ω–∏—è –Ω–∞ 7 –æ—Ç 1 –¥–æ 10.\n\n–ù–∞–ø—Ä–∏–º–µ—Ä: 7 √ó 1 = 7",
                task_type="math",
                subject="–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
                difficulty=1,
                reward_coins=10,
                reward_exp=50,
                checking_criteria={"keywords": ["7", "√ó", "="], "min_length": 100},
                created_by=1
            ),
            Task(
                title="–•–∏–º–∏—á–µ—Å–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã",
                description="–ù–∞–ø–∏—à–∏—Ç–µ —Ö–∏–º–∏—á–µ—Å–∫–∏–µ —Å–∏–º–≤–æ–ª—ã –∏ –Ω–∞–∑–≤–∞–Ω–∏—è –ø–µ—Ä–≤—ã—Ö 10 —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ç–∞–±–ª–∏—Ü—ã –ú–µ–Ω–¥–µ–ª–µ–µ–≤–∞.",
                task_type="chemistry",
                subject="–•–∏–º–∏—è",
                difficulty=1,
                reward_coins=15,
                reward_exp=75,
                checking_criteria={"keywords": ["H", "He", "Li", "–≤–æ–¥–æ—Ä–æ–¥", "–≥–µ–ª–∏–π"], "min_length": 50},
                created_by=1
            )
        ]

        for task in tasks:
            db.add(task)

        db.commit()
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {len(tasks)} –∑–∞–¥–∞–Ω–∏–π")

        # ===== –ú–ê–ì–ê–ó–ò–ù =====
        print("üõçÔ∏è  –°–æ–∑–¥–∞–µ–º —Ç–æ–≤–∞—Ä—ã –≤ –º–∞–≥–∞–∑–∏–Ω–µ...")

        shop_items = [
            # –ê–≤–∞—Ç–∞—Ä—ã
            ShopItem(
                name="–ó–æ–ª–æ—Ç–∞—è –∑–≤–µ–∑–¥–∞",
                description="–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω–∞—è –∑–æ–ª–æ—Ç–∞—è –∑–≤–µ–∑–¥–∞ –¥–ª—è –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è",
                price_coins=100,
                item_type="avatar",
                item_data={"icon": "‚≠ê"},
                is_available=True
            ),
            ShopItem(
                name="–†–∞–∫–µ—Ç–∞",
                description="–ê–≤–∞—Ç–∞—Ä —Ä–∞–∫–µ—Ç—ã –¥–ª—è –∞–º–±–∏—Ü–∏–æ–∑–Ω—ã—Ö —É—á–µ–Ω–∏–∫–æ–≤",
                price_coins=150,
                item_type="avatar",
                item_data={"icon": "üöÄ"},
                is_available=True
            ),
            ShopItem(
                name="–ö–æ—Ä–æ–Ω–∞",
                description="–ö–æ—Ä–æ–Ω–∞ –¥–ª—è –ª–∏–¥–µ—Ä–æ–≤ —Ä–µ–π—Ç–∏–Ω–≥–∞",
                price_coins=300,
                item_type="avatar",
                item_data={"icon": "üëë"},
                is_available=True
            ),

            # –ë–µ–π–¥–∂–∏
            ShopItem(
                name="–ë–µ–π–¥–∂ '–û—Ç–ª–∏—á–Ω–∏–∫'",
                description="–ó–Ω–∞—á–æ–∫ –∑–∞ –æ—Ç–ª–∏—á–Ω—É—é —É—á–µ–±—É",
                price_coins=50,
                item_type="badge",
                item_data={"badge_id": "excellent_student"},
                is_available=True
            ),
            ShopItem(
                name="–ë–µ–π–¥–∂ '–ú–∞—Ç–µ–º–∞—Ç–∏–∫'",
                description="–ó–∞ —Ä–µ—à–µ–Ω–∏–µ 100 –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á",
                price_coins=200,
                item_type="badge",
                item_data={"badge_id": "math_master"},
                is_available=True
            ),
            ShopItem(
                name="–ë–µ–π–¥–∂ '–ü–∏—Å–∞—Ç–µ–ª—å'",
                description="–ó–∞ –Ω–∞–ø–∏—Å–∞–Ω–∏–µ 50 —Å–æ—á–∏–Ω–µ–Ω–∏–π",
                price_coins=200,
                item_type="badge",
                item_data={"badge_id": "writer"},
                is_available=True
            ),

            # –¢–µ–º—ã –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
            ShopItem(
                name="–¢–µ–º–Ω–∞—è —Ç–µ–º–∞",
                description="–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è —Ç–µ–º–Ω–∞—è —Ç–µ–º–∞ –¥–ª—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞",
                price_coins=80,
                item_type="theme",
                item_data={"theme_id": "dark"},
                is_available=True
            ),
            ShopItem(
                name="–ö–æ—Å–º–∏—á–µ—Å–∫–∞—è —Ç–µ–º–∞",
                description="–ö—Ä–∞—Å–∏–≤–∞—è —Ç–µ–º–∞ —Å –∫–æ—Å–º–æ—Å–æ–º",
                price_coins=120,
                item_type="theme",
                item_data={"theme_id": "space"},
                is_available=True
            ),

            # Power-ups
            ShopItem(
                name="–î–≤–æ–π–Ω—ã–µ –º–æ–Ω–µ—Ç—ã",
                description="–ü–æ–ª—É—á–∞–π—Ç–µ x2 –º–æ–Ω–µ—Ç—ã –∑–∞ —Å–ª–µ–¥—É—é—â–∏–µ 5 –∑–∞–¥–∞–Ω–∏–π",
                price_coins=100,
                item_type="power_up",
                item_data={"type": "double_coins", "duration": 5},
                is_available=True,
                stock=None
            ),
            ShopItem(
                name="–ü–æ–¥—Å–∫–∞–∑–∫–∞",
                description="–ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫—É –¥–ª—è –ª—é–±–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è",
                price_coins=50,
                item_type="hint",
                item_data={"type": "hint"},
                is_available=True,
                stock=None
            )
        ]

        for item in shop_items:
            db.add(item)

        db.commit()
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {len(shop_items)} —Ç–æ–≤–∞—Ä–æ–≤")

        print("\nüéâ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!")
        print("\nüìã –¢–µ—Å—Ç–æ–≤—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:")
        print("   –£—á–∏—Ç–µ–ª—å: teacher / teacher123")
        print("   –£—á–µ–Ω–∏–∫ 1: student1 / student123")
        print("   –£—á–µ–Ω–∏–∫ 2: student2 / student123")
        print("\nüåê –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: uvicorn app.main:app --reload")
        print("üìö API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/api/docs")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        db.rollback()

    finally:
        db.close()


if __name__ == "__main__":
    create_sample_data()